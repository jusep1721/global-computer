{"version":3,"file":"static/js/606.9a64a8f4.chunk.js","mappings":"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","sources":["Components/Card/Card.js","Components/Carrusel/ProductCarrusel/useProductCarrusel.js","Components/Carrusel/ProductCarrusel/productCarrusel.js","Components/Modal/ModalInfo.js","Pages/Products/useProducts.js","Pages/Products/viewProduct.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport {Card,CardActions,CardContent,CardMedia,Typography,IconButton,Box} from \"@mui/material\"\r\nimport { Link } from 'react-router-dom'\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\"\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\"\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport SearchIcon from \"@mui/icons-material/Search\"\r\nimport ModalInfo from '../Modal/ModalInfo'\r\nimport Helper from '../../Resources/Class/helper'\r\nimport Utils from '../../Resources/Class/utils'\r\nimport Server from '../../Resources/Json/Endpoints.json'\r\nimport { useUser } from '../../Context/Provider'\r\n\r\nconst ProductCard = ({ product, setIsLoading, setSuccess, setError }) => {\r\n  const { token } = useUser()\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const handleOpenModal = () => setOpenModal(true)\r\n  const handleCloseModal = () => setOpenModal(false)\r\n\r\n  const handleUserProduct = async (event, params, type) => {\r\n    event.preventDefault()\r\n    setIsLoading(true)\r\n    Helper.axiosRequest({\r\n      method: \"POST\",\r\n      url: Server.endpoints.createUserProduct,\r\n      data: { idProduct: params.id, quantity: params.quantity, status: type },\r\n      headers: { Authorization: token.isToken || token }\r\n    })\r\n    .then(data => { Utils.success(data, setSuccess)  })\r\n    .catch(error => { Utils.error(error, setError) })\r\n    .finally(() => { setIsLoading(false) })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"card\">\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={product.name}\r\n          image={product.image}/>\r\n\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            className=\"product-title\">\r\n            {product.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">{product.description}</Typography>\r\n          <Typography variant=\"h6\" className=\"product-price\">${Helper.formatPrice(product.price)}</Typography>\r\n        </CardContent>\r\n\r\n        <Box className=\"icon-button-container\">\r\n          <IconButton\r\n            aria-label=\"Añadir a favoritos\"\r\n            color=\"secondary\"\r\n            onClick={event => handleUserProduct(event, product, 'FAVORITES')}>\r\n            <FavoriteIcon className=\"icon-button\" sx={{stroke: 'red',strokeWidth: '2px',fill: 'white','&:hover': {fill: 'red',}}} />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">Añadir a favoritos</Typography>\r\n        </Box>\r\n\r\n        <CardActions className=\"card-actions\">\r\n          <Box className=\"icon-button-container\">\r\n            <IconButton\r\n              aria-label=\"Añadir al carrito\"\r\n              color=\"primary\"\r\n              onClick={event => handleUserProduct(event, product, 'CART')}>\r\n    \r\n              <AddShoppingCartIcon className=\"icon-button\" />\r\n            </IconButton>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">Añadir al carrito</Typography>\r\n          </Box>\r\n\r\n          <Box className=\"icon-button-container\">\r\n            <IconButton\r\n              aria-label=\"Ver más\"\r\n              color=\"primary\"\r\n              onClick={handleOpenModal}>\r\n              <SearchIcon className=\"icon-button\" />\r\n            </IconButton>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">Ver más</Typography>\r\n          </Box>\r\n\r\n          <ModalInfo\r\n            open={openModal}\r\n            handleClose={handleCloseModal}\r\n            product={product} />\r\n\r\n          <Box className=\"icon-button-container\" component={Link} to={`/home/buys/${product.id}`} sx={{ textDecoration: 'none' }}>\r\n            <IconButton aria-label=\"Comprar ahora\" color=\"primary\">\r\n              <AttachMoneyIcon className=\"icon-button\" />\r\n            </IconButton>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">Comprar ahora</Typography>\r\n          </Box>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import { useState } from \"react\"\r\n\r\nconst useProductCarrusel = () => {\r\n  const [slidesPerGroup, setSlidesPerGroup] = useState(4)\r\n\r\n  const state = {\r\n    slidesPerGroup,\r\n    setSlidesPerGroup\r\n  }\r\n\r\n  return { state }\r\n}\r\n\r\nexport default useProductCarrusel","import React from 'react'\r\nimport { Box } from '@mui/material'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Pagination } from 'swiper/modules'\r\nimport useProductCarrusel from './useProductCarrusel'\r\nimport 'swiper/css'\r\nimport 'swiper/css/pagination'\r\n\r\nconst ProductCarrusel = ({ product, selectedImage, onSelectImage, customBreakpoints }) => {\r\n  const { state } = useProductCarrusel()\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', mt: 2 }}>\r\n      <Swiper modules={[Pagination]}\r\n        pagination={{ clickable: true }}\r\n        slidesPerGroup={state.slidesPerGroup}\r\n        onBreakpoint={(swiper) => {\r\n          const current = swiper.params.slidesPerView\r\n          state.setSlidesPerGroup(typeof current === 'number' ? current : 4)\r\n        }}\r\n        breakpoints={customBreakpoints}\r\n        style={{ paddingBottom: '32px' }}>\r\n\r\n        {(product?.images || []).map((image, index) => (\r\n          <SwiperSlide key={index} style={{ width: 'auto', display: 'flex' }}>\r\n            <Box component=\"img\"\r\n              src={image}\r\n              alt={`Product ${index}`}\r\n              onClick={() => onSelectImage(image)}\r\n              sx={{\r\n                width: 80,\r\n                height: 80,\r\n                mx: 'auto',\r\n                cursor: 'pointer',\r\n                border: selectedImage === image ? '2px solid blue' : '1px solid gray',\r\n                borderRadius: 1,\r\n                objectFit: 'cover'\r\n              }}\r\n            />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ProductCarrusel\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Modal, Box, Typography, IconButton, Button } from \"@mui/material\"\r\nimport CloseIcon from \"@mui/icons-material/Close\"\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\"\r\nimport helper from \"../../Resources/Class/helper\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport ProductCarrusel from \"../Carrusel/ProductCarrusel/productCarrusel\"\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"90%\",\r\n  maxWidth: 500,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 2,\r\n}\r\n\r\nconst ModalInfo = ({ open, handleClose, product }) => {\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (product && product.images?.length > 0) {\r\n      setSelectedImage(product.images[0])\r\n    } else {\r\n      setSelectedImage(null)\r\n    }\r\n  }, [product])\r\n\r\n  const handleSelect = (product) => {    \r\n    navigate(`/home/buys/${product.id}`)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose} sx={{ mx: { xs: 4 } }}>\r\n      <Box sx={style}>\r\n        {product ? (\r\n          <>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n              <Typography variant=\"h6\">{product.name}</Typography>\r\n              <IconButton onClick={handleClose}><CloseIcon /></IconButton>\r\n            </Box>\r\n            {selectedImage && ( <Box component=\"img\" src={selectedImage} alt=\"Product\" sx={{ width: '100%', borderRadius: 1 }} /> )}\r\n\r\n            <ProductCarrusel\r\n              product={product}\r\n              selectedImage={selectedImage}\r\n              onSelectImage={setSelectedImage}\r\n              customBreakpoints={{\r\n                375:   { slidesPerView: 3 },                \r\n                600:   { slidesPerView: 4 }                \r\n              }}\r\n            />\r\n            <Typography variant=\"body1\" mt={2}>{product.description}</Typography>\r\n            <Typography variant=\"h6\" mt={1}>${helper.formatPrice(product.price)}</Typography>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }} startIcon={<ShoppingCartIcon />} onClick={() => handleSelect(product)}>\r\n              Comprar ahora\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Typography variant=\"body2\" color=\"textSecondary\">Cargando información del producto...</Typography>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalInfo\r\n","import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useMediaQuery, useTheme, createTheme } from '@mui/material'\r\nimport { useUser } from '../../Context/Provider'\r\n\r\nconst useProducts = () => {\r\n    const itemsPerPage = 6\r\n    const isXs = useMediaQuery(useTheme().breakpoints.down('sm'))\r\n    const { dataContext } = useUser()\r\n\r\n    const theme = createTheme({\r\n        breakpoints: {\r\n            values: {\r\n                xs: 0,\r\n                sm: 600,\r\n                md: 1213,\r\n                lg: 1380,\r\n                xl: 1920\r\n            }\r\n        }\r\n    }) \r\n    \r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [openBrand, setOpenBrand] = useState(false)\r\n    const [openCategory, setOpenCategory] = useState(false)\r\n    const [selectedBrands, setSelectedBrands] = useState([])\r\n    const [selectedCategories, setSelectedCategories] = useState([])\r\n    const [priceRange, setPriceRange] = useState([Math.min(...dataContext.map((p) => p.price)), Math.max(...dataContext.map((p) => p.price))])\r\n    const [sortOrder, setSortOrder] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [warning, setWarning] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [openDrawer, setOpenDrawer] = useState(false)\r\n    const [openCollapse, setOpenCollapse] = useState(null)\r\n    const { brand, category } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (brand) {\r\n            setSelectedBrands([brand])\r\n            setOpenCollapse('brand')\r\n        }\r\n    }, [brand])\r\n    \r\n    useEffect(() => {\r\n        if (category) {\r\n            setSelectedCategories([category])\r\n            setOpenCollapse('category')\r\n        }\r\n    }, [category])\r\n\r\n    const handlePageChange = (event, value) => { \r\n        setCurrentPage(value) \r\n        window.scrollTo({ top: 0, behavior: \"smooth\" })\r\n    }\r\n\r\n    const handleBrandChange = brand => { setSelectedBrands((prev) => prev.includes(brand) ? prev.filter((b) => b !== brand) : [...prev, brand]) }\r\n    const handleCategoryChange = category => { setSelectedCategories((prev) => prev.includes(category) ? prev.filter((c) => c !== category) : [...prev, category]) }\r\n    const handlePriceChange = (event, newValue) => { setPriceRange(newValue) }\r\n\r\n    const handleClearFilters = () => {\r\n        setSelectedBrands([])\r\n        setSelectedCategories([])\r\n        setPriceRange([Math.min(...dataContext.map((p) => p.price)), Math.max(...dataContext.map((p) => p.price))])\r\n        setSortOrder('')\r\n    }\r\n\r\n    const sortProducts = (dataContext) => {\r\n        switch (sortOrder) {\r\n            case 'name-asc': return dataContext.sort((a, b) => a.name.localeCompare(b.name))\r\n            case 'name-desc': return dataContext.sort((a, b) => b.name.localeCompare(a.name))\r\n            case 'price-asc': return dataContext.sort((a, b) => a.price - b.price)\r\n            case 'price-desc': return dataContext.sort((a, b) => b.price - a.price)\r\n            default: return dataContext\r\n        }\r\n    }\r\n\r\n    const filteredProducts = dataContext.filter((product) => {\r\n        const matchesBrand = selectedBrands.length ? selectedBrands.includes(product.brand) : true\r\n        const matchesCategory = selectedCategories.length ? selectedCategories.includes(product.category) : true\r\n        const matchesPrice = product.price >= priceRange[0] && product.price <= priceRange[1]\r\n        return matchesBrand && matchesCategory && matchesPrice\r\n    })\r\n\r\n    const sortedProducts = sortProducts(filteredProducts)\r\n    const displayedProducts = sortedProducts.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\r\n\r\n    const state = {\r\n        currentPage,\r\n        openBrand,\r\n        openCategory,\r\n        selectedBrands,\r\n        selectedCategories,\r\n        priceRange,\r\n        sortOrder,\r\n        filteredProducts,\r\n        displayedProducts,\r\n        itemsPerPage,\r\n        isLoading,\r\n        success,\r\n        warning,\r\n        error,\r\n        isXs,\r\n        openDrawer,\r\n        openCollapse,\r\n        setOpenBrand,\r\n        setOpenCategory,\r\n        setSortOrder,\r\n        setIsLoading,\r\n        setSuccess,\r\n        setWarning,\r\n        setError,\r\n        setOpenDrawer,\r\n        setOpenCollapse\r\n    }\r\n    \r\n    const handlers = {\r\n        handlePageChange,\r\n        handleBrandChange,\r\n        handleCategoryChange,\r\n        handlePriceChange,\r\n        handleClearFilters,\r\n    }\r\n\r\n    const context = {\r\n        dataContext,\r\n        theme\r\n    }\r\n\r\n    return { state, handlers, context }\r\n}\r\n\r\nexport default useProducts","import React from 'react'\r\nimport {Box,Typography,Collapse,FormGroup,FormControlLabel,Checkbox,Button,IconButton,Slider,MenuItem,Select,Grid,Drawer,ThemeProvider} from '@mui/material'\r\nimport {ShoppingCart,SortByAlpha,ArrowUpward,ArrowDownward,ExpandMore,ExpandLess,DeleteSweep,FilterList,Close} from '@mui/icons-material'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport Card from '../../Components/Card/Card'\r\nimport LoadingPage from '../../Components/LoadingPage/LoadingPage'\r\nimport Alerts from '../../Components/Alerts/Alert'\r\nimport helper from '../../Resources/Class/helper'\r\nimport useProducts from './useProducts'\r\n\r\nfunction ViewProducts() {\r\n  const { state, handlers, context } = useProducts() \r\n\r\n  return (\r\n    <ThemeProvider theme={context.theme}>\r\n      <Box>\r\n      {/* Pantalla de carga */}\r\n      {state.isLoading && ( <LoadingPage /> )}\r\n\r\n      {/* Alert para errores */}\r\n      {state.success && (\r\n          <Alerts \r\n            prop={{severity: \"success\", title: \"Completado\", alert: state.success}}  \r\n            closeFunction={state.setSuccess} \r\n            params={null}\r\n          /> \r\n        )}\r\n        {state.warning && (\r\n          <Alerts \r\n            prop={{severity: \"warning\", title: \"Advertencia\", alert: state.warning}}  \r\n            closeFunction={state.setWarning} \r\n            params={null}\r\n          /> \r\n        )}\r\n        {state.error && (\r\n          <Alerts \r\n            prop={{severity: \"error\", title: \"Error\", alert: state.error}}  \r\n            closeFunction={state.setError} \r\n            params={null}\r\n          /> \r\n        )}\r\n\r\n        <Grid container \r\n          sx={{\r\n            backgroundColor: '#e4ebee',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            p: 2,\r\n            flexWrap: 'nowrap',\r\n          }}>\r\n          <Grid item xs=\"auto\">\r\n            <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n              <ShoppingCart fontSize=\"small\" />\r\n              <Typography fontSize={{ xs: 13, sm: 15 }}>{state.filteredProducts.length} Productos</Typography>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs=\"auto\">\r\n            <Box display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-end\"\r\n              gap={1}\r\n              sx={{ overflow: 'hidden' }}>\r\n              <Typography variant=\"body2\" fontSize={{ xs: 13, sm: 15 }} noWrap>Ordenar Por:</Typography>\r\n              <Select value={state.sortOrder} onChange={(e) => state.setSortOrder(e.target.value)} displayEmpty size=\"small\"\r\n                sx={{\r\n                  fontSize: { xs: 13, sm: 15 },\r\n                  minWidth: 'unset',\r\n                  maxWidth: state.isXs ? 180 : 'none',\r\n                }}\r\n                MenuProps={{\r\n                  PaperProps: {\r\n                    style: {\r\n                      maxHeight: 300,\r\n                      maxWidth: 200,\r\n                      zIndex: 1301\r\n                    }\r\n                  }\r\n                }}\r\n                renderValue={(value) => {\r\n                  const renderText = (text) => (\r\n                    <Typography fontSize={{ xs: 13, sm: 15 }}\r\n                      noWrap={state.isXs}\r\n                      sx={\r\n                        state.isXs\r\n                          ? {\r\n                              overflow: 'hidden',\r\n                              textOverflow: 'ellipsis',\r\n                              whiteSpace: 'nowrap'\r\n                            }\r\n                          : {}\r\n                      }>{text}\r\n                    </Typography>\r\n                  )\r\n\r\n                  switch (value) {\r\n                    case 'name-asc':\r\n                      return (\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\r\n                          <SortByAlpha fontSize=\"small\" />\r\n                          {renderText('Nombre Ascendente')}\r\n                        </Box>\r\n                      )\r\n                    case 'name-desc':\r\n                      return (\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\r\n                          <SortByAlpha fontSize=\"small\" />\r\n                          {renderText('Nombre Descendente')}\r\n                        </Box>\r\n                      )\r\n                    case 'price-asc':\r\n                      return (\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\r\n                          <ArrowDownward fontSize=\"small\" />\r\n                          {renderText('Menor Precio')}\r\n                        </Box>\r\n                      )\r\n                    case 'price-desc':\r\n                      return (\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\r\n                          <ArrowUpward fontSize=\"small\" />\r\n                          {renderText('Mayor Precio')}\r\n                        </Box>\r\n                      )\r\n                    default:\r\n                      return <Typography>Opciones</Typography>\r\n                  }\r\n                }}>\r\n                <MenuItem value=\"name-asc\">Nombre Ascendente</MenuItem>\r\n                <MenuItem value=\"name-desc\">Nombre Descendente</MenuItem>\r\n                <MenuItem value=\"price-asc\">Menor Precio</MenuItem>\r\n                <MenuItem value=\"price-desc\">Mayor Precio</MenuItem>\r\n              </Select>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Botón Filtros para XS */}\r\n        <Box display={{ xs: 'flex', md: 'none' }} sx={{ justifyContent:\"flex-start\", alignItems:\"center\" }} gap={1}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<FilterList />}\r\n            onClick={() => state.setOpenDrawer(true)}\r\n            sx={{ my: 2, mx: 'auto' }}>\r\n            Filtros...\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Drawer de Filtros */}\r\n        <Drawer\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          display=\"flex\"      \r\n          sx={{ justifyContent:\"center\", alignItems:\"center\" }}\r\n          anchor=\"bottom\"\r\n          open={state.openDrawer}\r\n          onClose={() => state.setOpenDrawer(false)}>\r\n          <Box\r\n            width=\"80vw\"\r\n            p={2}\r\n            role=\"presentation\"\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            sx={{ mx: 'auto' }}\r\n            gap={2}>\r\n            {/* Header del Drawer */}\r\n            <Box display=\"flex\" sx={{ justifyContent:\"space-between\", alignItems:\"center\" }}>\r\n              <Typography variant=\"h6\">Filtros</Typography>\r\n              <IconButton onClick={() => state.setOpenDrawer(false)}>\r\n                <Close />\r\n              </IconButton>\r\n            </Box>\r\n\r\n            <Box>\r\n              {/* Filtro por Marca */}\r\n              <Box>\r\n                <Box\r\n                  display=\"flex\"                \r\n                  sx={{ cursor: 'pointer', justifyContent:\"space-between\", alignItems:\"center\" }}\r\n                  onClick={() => state.setOpenCollapse(state.openCollapse === 'brand' ? null : 'brand')}>\r\n                  <Typography variant=\"body1\">Marca</Typography>\r\n                  <IconButton size=\"small\">\r\n                    {state.openCollapse === 'brand' ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                </Box>\r\n                <Collapse in={state.openCollapse === 'brand'}>\r\n                  <FormGroup>\r\n                    {[...new Set(context.dataContext.map((product) => product.brand))].map((brand) => (\r\n                      <FormControlLabel\r\n                        key={brand}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={state.selectedBrands.includes(brand)}\r\n                            onChange={() => handlers.handleBrandChange(brand)}\r\n                          />\r\n                        }\r\n                        label={brand}\r\n                      />\r\n                    ))}\r\n                  </FormGroup>\r\n                </Collapse>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Box>\r\n                <Box\r\n                  display=\"flex\"                \r\n                  sx={{ cursor: 'pointer', justifyContent:\"space-between\", alignItems:\"center\" }}\r\n                  onClick={() => state.setOpenCollapse(state.openCollapse === 'category' ? null : 'category')}>\r\n                  <Typography variant=\"body1\">Categoría</Typography>\r\n                  <IconButton size=\"small\">\r\n                    {state.openCollapse === 'category' ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                </Box>\r\n                <Collapse in={state.openCollapse === 'category'}>\r\n                  <FormGroup>\r\n                    {[...new Set(context.dataContext.map((product) => product.category))].map((category) => (\r\n                      <FormControlLabel\r\n                        key={category}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={state.selectedCategories.includes(category)}\r\n                            onChange={() => handlers.handleCategoryChange(category)}\r\n                          />\r\n                        }\r\n                        label={category}\r\n                      />\r\n                    ))}\r\n                  </FormGroup>\r\n                </Collapse>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box>\r\n              {/* Filtro por Rango de Precio */}\r\n              <Typography variant=\"body1\" gutterBottom mt={2}>\r\n                Rango de Precio\r\n              </Typography>\r\n              <Slider\r\n                value={state.priceRange}\r\n                onChange={(e, newValue) => handlers.handlePriceChange(e, newValue)}\r\n                onChangeCommitted={(e, newValue) => handlers.handlePriceChange(e, newValue)}\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => `$${helper.formatPrice(value)}`}\r\n                step={10000}\r\n                min={Math.min(...context.dataContext.map((p) => p.price))}\r\n                max={Math.max(...context.dataContext.map((p) => p.price))}\r\n              />\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"body2\">${helper.formatPrice(state.priceRange[0])}</Typography>\r\n                <Typography variant=\"body2\">${helper.formatPrice(state.priceRange[1])}</Typography>\r\n              </Box>\r\n            </Box>\r\n\r\n            {/* Botón Limpiar */}\r\n            <Button\r\n              sx={{\r\n                width: '50%',\r\n                mx: 'auto'\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<DeleteSweep />}\r\n              onClick={handlers.handleClearFilters}>\r\n              Limpiar Todo\r\n            </Button>\r\n          </Box>\r\n        </Drawer>\r\n\r\n        {/* Contenido */}\r\n        <Grid container justifyContent=\"center\" sx={{ \r\n          px: { xs: 2, md: 10 }, \r\n          py : {xs: 2, md: 5} }}>\r\n          {/* Filtros */}\r\n          <Grid item=\"true\" xs={12} md={4}>\r\n            <Box width={'75%'}\r\n              display={{ xs: 'none', md: 'block' }}\r\n              mb={{ xs: 2, md: 0 }}\r\n              p={2}\r\n              border=\"1px solid #ddd\"\r\n              borderRadius=\"8px\"\r\n              sx={{\r\n                boxSizing: 'border-box',\r\n                position: { md: 'sticky' },\r\n                top: { md: '100px' }\r\n              }}\r\n              zIndex={1}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Filtros\r\n              </Typography>\r\n\r\n              {/* Filtro por Marca */}\r\n              <Box>\r\n                <Box\r\n                  display=\"flex\"                    \r\n                  sx={{ cursor: 'pointer', alignItems:\"center\", justifyContent:\"space-between\" }}\r\n                  onClick={() => state.setOpenCollapse(state.openCollapse === 'brand' ? null : 'brand')}>\r\n                  <Typography variant=\"body1\">Marca</Typography>\r\n                  <IconButton size=\"small\">\r\n                    {state.openCollapse === 'brand' ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                </Box>\r\n                <Collapse in={state.openCollapse === 'brand'}>\r\n                  <FormGroup>\r\n                    {[...new Set(context.dataContext.map((product) => product.brand))].map((brand) => (\r\n                      <FormControlLabel\r\n                        key={brand}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={state.selectedBrands.includes(brand)}\r\n                            onChange={() => handlers.handleBrandChange(brand)}\r\n                          />\r\n                        }\r\n                        label={brand}\r\n                      />\r\n                    ))}\r\n                  </FormGroup>\r\n                </Collapse>\r\n              </Box>\r\n\r\n              {/* Filtro por Categoría */}\r\n              <Box mt={2}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  sx={{ cursor: 'pointer', alignItems:\"center\", justifyContent:\"space-between\" }}\r\n                  onClick={() => state.setOpenCollapse(state.openCollapse === 'category' ? null : 'category')}>\r\n                  <Typography variant=\"body1\">Categoría</Typography>\r\n                  <IconButton size=\"small\">\r\n                    {state.openCollapse === 'category' ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                </Box>\r\n                <Collapse in={state.openCollapse === 'category'}>\r\n                  <FormGroup>\r\n                    {[...new Set(context.dataContext.map((product) => product.category))].map((category) => (\r\n                      <FormControlLabel\r\n                        key={category}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={state.selectedCategories.includes(category)}\r\n                            onChange={() => handlers.handleCategoryChange(category)}\r\n                          />\r\n                        }\r\n                        label={category}\r\n                      />\r\n                    ))}\r\n                  </FormGroup>\r\n                </Collapse>\r\n              </Box>\r\n\r\n              {/* Filtro por Rango de Precio */}\r\n              <Typography variant=\"body1\" gutterBottom mt={2}>\r\n                Rango de Precio\r\n              </Typography>\r\n              <Slider\r\n                value={state.priceRange}\r\n                onChange={(e, newValue) => handlers.handlePriceChange(e, newValue)}\r\n                onChangeCommitted={(e, newValue) => handlers.handlePriceChange(e, newValue)}\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => `$${helper.formatPrice(value)}`}\r\n                step={10000}\r\n                min={Math.min(...context.dataContext.map((p) => p.price))}\r\n                max={Math.max(...context.dataContext.map((p) => p.price))}\r\n              />\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"body2\">${helper.formatPrice(state.priceRange[0])}</Typography>\r\n                <Typography variant=\"body2\">${helper.formatPrice(state.priceRange[1])}</Typography>\r\n              </Box>\r\n\r\n              {/* Botón Limpiar Todo */}\r\n              <Box mt={2}>\r\n                <Button variant=\"contained\" fullWidth color=\"primary\" startIcon={<DeleteSweep />} onClick={handlers.handleClearFilters}>\r\n                  Limpiar Todo\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n\r\n          {/* Productos */}\r\n          <Grid item=\"true\" xs={12} md={8}>\r\n            <Box>\r\n              {state.displayedProducts.length > 0 ? (\r\n                <Grid container>\r\n                  {state.displayedProducts.map((product) => (\r\n                    \r\n                    <Grid item=\"true\" xs={12} md={6} xl={4} key={product.id}>\r\n                      <Box sx={{ mx: 2, mb: 4 }}>\r\n                        <Card product={product} setIsLoading={state.setIsLoading} setSuccess={state.setSuccess} setError={state.setError}/>\r\n                      </Box>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                ) : (\r\n                <Box\r\n                  display=\"flex\"\r\n                  sx={{ alignItems:\"center\", justifyContent:\"center\" }}\r\n                  height=\"200px\">\r\n                  <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    No hay productos que coincidan con los filtros aplicados.\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n\r\n              {/* Paginación */}\r\n              {state.displayedProducts.length > 0 && (\r\n                <Box mt={4} display=\"flex\" justifyContent=\"center\">\r\n                    <Pagination\r\n                    count={Math.ceil(state.filteredProducts.length / state.itemsPerPage)}\r\n                    page={state.currentPage}\r\n                    onChange={handlers.handlePageChange}\r\n                    color=\"primary\"\r\n                    />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default ViewProducts"],"names":["_ref","product","setIsLoading","setSuccess","setError","token","useUser","openModal","setOpenModal","useState","handleUserProduct","async","event","params","type","preventDefault","Helper","axiosRequest","method","url","Server","data","idProduct","id","quantity","status","headers","Authorization","isToken","then","Utils","success","catch","error","finally","_jsx","_Fragment","children","_jsxs","Card","className","CardMedia","component","alt","name","image","CardContent","Typography","gutterBottom","variant","color","description","formatPrice","price","Box","IconButton","onClick","FavoriteIcon","sx","stroke","strokeWidth","fill","CardActions","AddShoppingCartIcon","handleOpenModal","SearchIcon","ModalInfo","open","handleClose","handleCloseModal","Link","to","textDecoration","AttachMoneyIcon","useProductCarrusel","slidesPerGroup","setSlidesPerGroup","state","selectedImage","onSelectImage","customBreakpoints","width","mt","Swiper","modules","Pagination","pagination","clickable","onBreakpoint","swiper","current","slidesPerView","breakpoints","style","paddingBottom","images","map","index","SwiperSlide","display","src","height","mx","cursor","border","borderRadius","objectFit","position","top","left","transform","maxWidth","bgcolor","boxShadow","p","setSelectedImage","navigate","useNavigate","useEffect","_product$images","length","Modal","onClose","xs","justifyContent","mb","CloseIcon","ProductCarrusel","helper","Button","fullWidth","startIcon","ShoppingCartIcon","handleSelect","useProducts","isXs","useMediaQuery","useTheme","down","dataContext","theme","createTheme","values","sm","md","lg","xl","currentPage","setCurrentPage","openBrand","setOpenBrand","openCategory","setOpenCategory","selectedBrands","setSelectedBrands","selectedCategories","setSelectedCategories","priceRange","setPriceRange","Math","min","max","sortOrder","setSortOrder","isLoading","warning","setWarning","openDrawer","setOpenDrawer","openCollapse","setOpenCollapse","brand","category","useParams","filteredProducts","filter","matchesBrand","includes","matchesCategory","matchesPrice","sortedProducts","sort","a","b","localeCompare","sortProducts","displayedProducts","slice","handlers","handlePageChange","value","window","scrollTo","behavior","handleBrandChange","prev","handleCategoryChange","c","handlePriceChange","newValue","handleClearFilters","itemsPerPage","context","ThemeProvider","LoadingPage","Alerts","prop","severity","title","alert","closeFunction","Grid","container","backgroundColor","alignItems","flexWrap","item","gap","ShoppingCart","fontSize","overflow","noWrap","Select","onChange","e","target","displayEmpty","size","minWidth","MenuProps","PaperProps","maxHeight","zIndex","renderValue","renderText","text","textOverflow","whiteSpace","SortByAlpha","ArrowDownward","ArrowUpward","MenuItem","FilterList","my","Drawer","anchor","role","flexDirection","Close","ExpandLess","ExpandMore","Collapse","in","FormGroup","Set","FormControlLabel","control","Checkbox","checked","label","Slider","onChangeCommitted","valueLabelDisplay","valueLabelFormat","step","DeleteSweep","px","py","boxSizing","count","ceil","page"],"sourceRoot":""}